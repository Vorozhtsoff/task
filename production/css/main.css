/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

.clearfix:after {
  content: '';
  display: block;
  clear: both; }

.tabs-navigation__list, .interests__list, .friendlist {
  margin: 0;
  padding: 0;
  list-style-type: none;
  font-size: 0; }

.button {
  background-color: transparent;
  border: none;
  -webkit-box-shadow: 0 1px 2px rgba(0, 0, 0, 0.38);
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.38); }

#page-wrapper {
  background-color: #e0e0e0;
  padding-top: 45px;
  min-height: 100%; }

body,
html {
  height: 100%;
  font-size: 14px; }

h1:first-child, h2:first-child, h3:first-child, h4:first-child, h5:first-child, h6:first-child, p:first-child, ul:first-child, dl:first-child {
  margin-top: 0; }

.profile-section {
  line-height: 1.45;
  max-width: 487px;
  font-size: 12px;
  font-size: 0.85714rem;
  color: black;
  min-width: 320px; }
  @media (min-width: 600px) {
    .profile-section {
      margin-left: 40px; } }

.profile__sidebar {
  width: 150px;
  padding-right: 18px;
  padding-bottom: 15px; }

.profile__content-header {
  margin-bottom: 20px; }

@media (min-width: 485px) {
  .profile__sidebar {
    float: left; }
  .profile__content {
    margin-left: 150px; } }

.tabs__content {
  background-color: #fff;
  -webkit-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.31);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.31);
  padding: 15px; }

.tabs-navigation__item {
  font-size: 14px;
  font-size: 1rem;
  display: inline-block;
  vertical-align: top;
  color: #fff; }
  .tabs-navigation__item:not(:first-child) {
    margin-left: 10px; }

.tabs-navigation__link {
  display: block;
  padding: 7px 15px;
  text-decoration: none;
  background-image: -webkit-gradient(linear, left bottom, left top, from(#1f68ac), to(#0685b4));
  background-image: -webkit-linear-gradient(bottom, #1f68ac 0%, #0685b4 100%);
  background-image: linear-gradient(to top, #1f68ac 0%, #0685b4 100%);
  color: inherit;
  border-radius: 5px 5px 0 0; }
  .tabs-navigation__link:not(.active) {
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#0685b4', endColorstr='#1f68ac',GradientType=0); }
  .tabs-navigation__link.active {
    background-image: none;
    background-color: #fff;
    color: black;
    -webkit-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.31);
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.31);
    position: relative; }
    .tabs-navigation__link.active:after {
      content: '';
      display: block;
      background-color: #fff;
      position: absolute;
      height: 5px;
      bottom: -3px;
      left: 0;
      right: 0;
      z-index: 1; }

.tab-section {
  height: 250px;
  overflow: hidden; }

.profile-image {
  margin-bottom: 5px;
  position: relative; }
  .profile-image img {
    display: block;
    width: 100%;
    height: auto;
    max-width: 100%; }
  .profile-image:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    -webkit-box-shadow: inset 0 1px 6px rgba(0, 0, 0, 0.32);
    box-shadow: inset 0 1px 6px rgba(0, 0, 0, 0.32); }

.button {
  font-size: 12px;
  font-size: 0.85714rem;
  padding: 7px 12px;
  border-radius: 1px;
  margin-bottom: 15px; }
  .button_action {
    width: 100%;
    color: white;
    text-align: center;
    background-image: -webkit-gradient(linear, left bottom, left top, from(#e65300), to(#e68200));
    background-image: -webkit-linear-gradient(bottom, #e65300 0%, #e68200 100%);
    background-image: linear-gradient(to top, #e65300 0%, #e68200 100%);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#e68200', endColorstr='#e65300',GradientType=0); }
  .button_decline {
    width: 100%;
    color: white;
    background-color: #1574af; }

.profile-features {
  margin: 0 0 26px;
  font-size: 0px;
  font-size: 0rem; }
  .profile-features__row {
    overflow: hidden; }
  .profile-features__label {
    font-size: 12px;
    font-size: 0.85714rem;
    padding: 3px 15px 3px 0;
    color: black;
    font-weight: 700;
    width: 53%;
    float: left; }
  .profile-features__description {
    font-size: 12px;
    font-size: 0.85714rem;
    vertical-align: top;
    padding: 3px 0;
    margin-left: 0;
    margin-left: 53%; }

.modal-overlay {
  position: absolute;
  z-index: 50;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.3); }

.modal-wrapper {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0; }

.modal {
  position: absolute;
  top: -webkit-calc(50% - 60px);
  top: calc(50% - 60px);
  left: -webkit-calc(50% - 100px);
  left: calc(50% - 100px);
  z-index: 51; }

.form-interest {
  padding: 15px;
  background-color: #fff;
  max-width: 200px;
  border-radius: 2px;
  -webkit-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.31);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.31);
  margin-left: 40px;
  margin-bottom: 40px; }

.form-label {
  display: block;
  font-size: 14px;
  font-size: 1rem;
  font-weight: 700;
  margin-bottom: 5px; }

.form-text {
  margin-bottom: 10px;
  height: 32px;
  line-height: 30px;
  width: 100%;
  border: 1px solid #d5d5d5;
  border-radius: 3px;
  padding: 0 10px;
  font-size: 12px;
  font-size: 0.85714rem; }

.interests__title {
  display: block;
  font-weight: 700;
  color: black;
  margin-bottom: 5px; }

.interests__list {
  margin: 0 -1px; }

.interests__item {
  vertical-align: top;
  display: inline-block;
  margin: 0 1px 10px; }

.interests__link {
  display: block;
  font-size: 12px;
  font-size: 0.85714rem;
  padding: 3px 10px;
  color: #1574af;
  text-decoration: none;
  border: 1px solid #d5d5d5;
  border-radius: 3px;
  -webkit-transition: all .3s;
  transition: all .3s;
  cursor: pointer; }
  @media (min-width: 485px) {
    .interests__link:hover {
      background-color: #f3f3f3;
      color: #000; } }
  .interests__link:active {
    background-color: #f3f3f3;
    color: #000;
    position: relative;
    bottom: 2px; }

.profile-name {
  font-size: 23px;
  font-size: 1.64286rem;
  margin: 0; }

.profile-city {
  color: #757575;
  font-size: 11px;
  font-size: 0.78571rem;
  margin-top: -2px;
  line-height: 1.45;
  display: block; }

.common-link, .friend-name {
  color: #1574af; }
  @media (min-width: 600px) {
    .common-link:hover, .friend-name:hover {
      text-decoration: none; } }

.friendlist {
  clear: both;
  margin: 0 -5px -30px; }
  .friendlist__item {
    padding: 0 5px 30px;
    vertical-align: top;
    display: inline-block;
    font-size: 13px;
    font-size: 0.92857rem;
    width: 100%; }
  @media (min-width: 485px) {
    .friendlist__item {
      width: 50%; } }

.friend {
  line-height: 1.2; }
  .friend__image {
    float: left;
    width: 62px;
    height: 62px; }
  .friend__content {
    margin-left: 77px;
    position: relative;
    height: 62px; }

.friend-name {
  display: block;
  font-size: 13px;
  font-size: 0.92857rem;
  font-weight: 700;
  margin: 0 0 0.2em;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis; }

.friend-city {
  display: block;
  display: -webkit-box;
  font-size: 11px;
  font-size: 0.78571rem;
  max-height: 26px;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2; }

.friend-status {
  font-size: 10px;
  font-size: 0.71429rem;
  font-style: italic;
  color: #2f8a26;
  position: absolute;
  bottom: 0;
  left: 0; }

.add-more {
  display: block;
  font-size: 11px;
  font-size: 0.78571rem; }

[data-editable-type]:focus {
  background-color: #f3f3f3;
  display: block;
  outline: none; }

.ss-wrapper {
  overflow: hidden;
  height: 100%;
  width: 100%;
  position: relative;
  z-index: 1;
  float: left; }

.ss-content {
  height: 100%;
  width: -webkit-calc(100% + 17px);
  width: calc(100% + 17px);
  padding: 0 32px 0 0;
  position: relative;
  right: -18px;
  left: 0;
  overflow: auto;
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

.ss-scroll {
  position: relative;
  background: #1574af;
  width: 5px;
  top: 0;
  z-index: 2;
  cursor: pointer;
  opacity: 0;
  -webkit-transition: opacity 0.25s linear;
  transition: opacity 0.25s linear; }

.ss-container:hover .ss-scroll {
  opacity: 1; }

.ss-hidden {
  display: none; }

.ss-grabbed {
  -ms-user-select: none;
  user-select: none;
  -o-user-select: none;
  -moz-user-select: none;
  -khtml-user-select: none;
  -webkit-user-select: none; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
